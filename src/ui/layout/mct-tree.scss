.c-tree-and-search {
    $hoverBg: rgba(#000, 0.1);
    $hoverFg: #ccc;
    $selected: #fff;
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
    //TODO: Do we need this???
    //padding-right: $interiorMarginSm;
    width: 100%;
    overflow: auto;

    > * + * { margin-top: $interiorMargin; }

    &__search {
        flex: 0 0 auto;
    }

    &__loading {
        flex: 1 1 auto;
        position: absolute;
        width: 100%;
    }

    &__no-results {
        font-style: italic;
        opacity: 0.6;
    }

    &__tree {
        flex: 1 1 auto;
        height: 0; // Chrome 73 overflow bug fix
        padding-right: $interiorMarginSm;
    }

    // new tree refactor
    .c-tree,
    .c-list {
        &__item {
            border-radius: 0;

            &:hover {
                background: $hoverBg;

                [class*="__name"] {
                    color: darken($colorKeyFg, 10%);
                }
            }

            &.is-navigated-object,
            &.is-selected {
                background: none;

                [class*="__name"] {
                    color: $selected;
                }
            }
        }
    }
    // new tree refactor
    .c-tree {
        flex: 1 1 auto;
        overflow-x: hidden;
        overflow-y: auto;
        transition: all;

        .scrollable-children {
            .c-tree__item-h {
                width: 100%;
            }
        }

        .c-tree {
            padding-left: 0;
        }

        &__item {
            //border-bottom: 1px solid $colorInteriorBorder;

            &.is-navigated-object,
            &.is-selected {
                .c-tree__item__type-icon:before {
                    color: $selected;
                }
            }

            .c-nav {
                $dimension: 20px;

                &__up, &__down {
                    color: #fff;
                    flex: 0 0 auto;
                    height: $dimension;
                    width: $dimension;
                    visibility: hidden;
                    position: relative;
                    text-align: center;

                    &.is-enabled {
                        visibility: visible;
                    }

                    &:hover {
                        color: darken($colorKeyFg, 10%);
                    }

                    &:before {
                        // Nav arrow
                        $color: rgba(#999, 0.5); // TODO: must make this theme-compliant
                        $dimension: 9px;
                        $width: 3px;
                        border: solid $color;
                        //border-width: $width;
                        border-width: 0 $width $width 0;
                        content: '';
                        display: block;
                        position: absolute;
                        left: 50%; top: 50%;
                        height: $dimension;
                        width: $dimension;
                    }

                    &:hover:before {
                        border-color: $colorItemTreeHoverFg;
                    }
                }

                &__up:before {
                    transform: translate(-30%, -50%) rotate(135deg);
                }

                &__down:before {
                    transform: translate(-70%, -50%) rotate(-45deg);
                }
            }
        }
    }
}

.c-tree,
.c-list {
    @include userSelectNone();
    overflow-x: hidden;
    overflow-y: auto;

    li {
        position: relative;
        &[class*="__item-h"] { display: block; }
        + li {
            margin-top: 1px;
        }
    }

    &__item {
        $aPad: $interiorMarginSm;
        border-radius: $controlCr;
        display: flex;
        align-items: center;
        cursor: pointer;
        line-height: 110%;
        padding: $interiorMarginSm $interiorMargin;
        transition: background 150ms ease;

        &:hover {
            background: $colorItemTreeHoverBg;

            [class*="__name"] {
                color: $colorItemTreeHoverFg;
            }
        }

        &.is-navigated-object,
        &.is-selected {
            background: $colorItemTreeSelectedBg;

            [class*="__name"] {
                color: $colorItemTreeSelectedFg;
            }
        }
    }
}

.c-tree {
    .c-tree {
        margin-left: 15px;
    }

    &__item {
        > * + * {
            margin-left: $interiorMarginSm;
        }

        &:hover {
            .c-tree__item__type-icon:before {
                color: $colorItemTreeIconHover;
            }
        }

        &.is-navigated-object,
        &.is-selected {
            .c-tree__item__type-icon:before {
                color: $colorItemTreeIconHover;
            }
        }

        &.is-being-edited {
            background: $colorItemTreeEditingBg;
            .c-tree__item__type-icon:before {
                color: $colorItemTreeEditingIcon;
            }

            .c-tree__item__name {
                color: $colorItemTreeEditingFg;
                font-style: italic;
            }
        }

        // Object labels in trees
        &__label {
            flex: 1 1 auto;
        }

        &__name {
            color: $colorItemTreeFg;
        }

        &__type-icon {
            color: $colorItemTreeIcon;
        }

        &.is-alias {
            // Object is an alias to an original.
            [class*='__type-icon'] {
                @include isAlias();
            }
        }

        body.mobile & {
            @include button($bg: $colorMobilePaneLeftTreeItemBg, $fg: $colorMobilePaneLeftTreeItemFg);
            height: $mobileTreeItemH;
            margin-bottom: $interiorMarginSm;
            [class*="view-control"] {
                width: ceil($mobileTreeItemH * 0.5);
            }
        }
    }
}

.c-list {
    padding-right: $interiorMargin;

    &__item {
        &__name {
            $p: $interiorMarginSm;
            @include ellipsize();
            padding-bottom: $p;
            padding-top: $p;
        }
    }
}

.c-selector {
    .c-tree-and-search__tree.c-tree {
        border: 1px solid $colorInteriorBorder;
        border-radius: $controlCr;
        padding: $interiorMargin;
    }
}

// TRANSITIONS
.slide-left,
.slide-right {
  animation-duration: 500ms;
  animation-iteration-count: 1;
  transition: all;
  transition-timing-function: ease-in-out;
}

.slide-left {
  animation-name: animSlideLeft;
}

.slide-right {
  animation-name: animSlideRight;
}

@keyframes animSlideLeft {
  0% {opactiy: 0; transform: translateX(100%);}
  10% {opacity: 1;}
  100% {transform: translateX(0);}
}

@keyframes animSlideRight {
  0% {opactiy: 0; transform: translateX(-100%);}
  10% {opacity: 1;}
  100% {transform: translateX(0);}
}
